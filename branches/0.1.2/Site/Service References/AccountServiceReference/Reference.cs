//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.1
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Site.AccountServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Server.Service")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SpaceLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passwd {
            get {
                return this.PasswdField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswdField, value) != true)) {
                    this.PasswdField = value;
                    this.RaisePropertyChanged("Passwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SpaceLimit {
            get {
                return this.SpaceLimitField;
            }
            set {
                if ((this.SpaceLimitField.Equals(value) != true)) {
                    this.SpaceLimitField = value;
                    this.RaisePropertyChanged("SpaceLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountServiceReference.IAccount")]
    public interface IAccount {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Exist", ReplyAction="http://tempuri.org/IAccount/ExistResponse")]
        bool Exist(string userEmail, string userPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/GetUser", ReplyAction="http://tempuri.org/IAccount/GetUserResponse")]
        Site.AccountServiceReference.User GetUser(string userEmail, string userPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Register", ReplyAction="http://tempuri.org/IAccount/RegisterResponse")]
        bool Register(string userEmail, string userPass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccount/Delete", ReplyAction="http://tempuri.org/IAccount/DeleteResponse")]
        bool Delete(string userEmail, string userPass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountChannel : Site.AccountServiceReference.IAccount, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountClient : System.ServiceModel.ClientBase<Site.AccountServiceReference.IAccount>, Site.AccountServiceReference.IAccount {
        
        public AccountClient() {
        }
        
        public AccountClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Exist(string userEmail, string userPass) {
            return base.Channel.Exist(userEmail, userPass);
        }
        
        public Site.AccountServiceReference.User GetUser(string userEmail, string userPass) {
            return base.Channel.GetUser(userEmail, userPass);
        }
        
        public bool Register(string userEmail, string userPass) {
            return base.Channel.Register(userEmail, userPass);
        }
        
        public bool Delete(string userEmail, string userPass) {
            return base.Channel.Delete(userEmail, userPass);
        }
    }
}
